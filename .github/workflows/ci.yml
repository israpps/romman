name: C++ Build and Release

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    outputs:
      artifact_path: ${{ steps.set_artifact_path.outputs.artifact_path }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSYS2 (Windows only)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          install: |
            base-devel git make texinfo patch binutils mpc-devel p7zip mingw-w64-i686-gcc
            mingw-w64-i686-cmake mingw-w64-i686-extra-cmake-modules mingw-w64-i686-make
          update: true
          
      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        run: cmake -G "MSYS Makefiles" -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release

      - name: Configure CMake
        if: matrix.os != 'windows-latest'
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release

      - id: set_artifact_path # Set the output variable 'artifact_path'
        name: Set Artifact Path
        run: echo "artifact_path=${{ github.workspace }}/build/romman${{ matrix.os == 'windows-latest' && '.exe' || '' }}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: romman-${{ matrix.os }}
          path: ${{ steps.set_artifact_path.outputs.artifact_path }}
          retention-days: 7 # Optional: keep artifacts for 7 days

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/') # Only release on pushes to branches
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: romman-ubuntu
          path: ${{ github.workspace }}/artifacts/ubuntu

      - uses: actions/download-artifact@v4
        with:
          name: romman-macos
          path: ${{ github.workspace }}/artifacts/macos

      - uses: actions/download-artifact@v4
        with:
          name: romman-windows
          path: ${{ github.workspace }}/artifacts/windows

      - name: Create Release Directory
        run: mkdir release

      - name: Move Files to Release Directory
        run: |
          mv ${{ github.workspace }}/artifacts/ubuntu/romman release/romman-linux  # Rename for clarity
          mv ${{ github.workspace }}/artifacts/macos/romman release/romman-macos
          mv ${{ github.workspace }}/artifacts/windows/romman.exe release/romman-windows.exe


      - uses: softprops/action-gh-release@v2
        with:
          files: release/*  # Release all files in the release directory
          prerelease: true
          tag_name: develop-${{ github.run_number }}
          name: Development Release ${{ github.run_number }}
          body: Development release triggered by push to develop branch.
